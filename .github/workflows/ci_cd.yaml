name: 'CI/CD PROD'

on:
  workflow_dispatch:
  push:
    branches: [ "master"]
    paths-ignore:
      - 'README.md'
      - 'k8s/**'
      - '.github/**'

permissions:
  contents: read

jobs:
  CI:
    name: 'Build'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Configure AWS credentials
    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    # Login to ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: 'true'

    - name: Get production .env file
      run: aws s3 cp s3://lendas-terraform-state/frontend-env/.env .env

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: lendasbet-frontend-prod
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:latest
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        docker push $REGISTRY/$REPOSITORY:latest

  CD:
    needs: CI
    name: 'Deploy'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Configure AWS credentials
    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
    
    # Generate kubeconfig
    - name: Get production .env file
      run: aws eks update-kubeconfig --region ${{ vars.AWS_REGION }} --name eks-lendasbet-prod

    # Set image version
    - name: Set image tag
      run: sed -i "s/latest/${{ github.sha }}/g" ./k8s/prod/deployment.yaml

    # Apply k8s manifest
    - name: Apply K8s manifest file
      run: kubectl apply -f ./k8s/prod/

    - name: Validate deployment
      run: kubectl rollout status deployment lendasbet-frontend --namespace  lendasbet-prod --timeout=0s 
